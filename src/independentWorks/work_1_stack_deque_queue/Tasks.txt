Вот несколько задач, связанных с использованием стеков,
очередей и двусторонних очередей (deque),
которые могут помочь углубить понимание этих структур данных и их применения:

1. Отмена операций
Реализуйте систему для текстового редактора, где можно добавлять текст,
удалять последние символы и возвращаться к предыдущим состояниям текста (как функция "Отменить").
Используйте стек для хранения истории изменений.

2. Постфиксная нотация
Напишите программу, которая вычисляет значение выражения,
записанного в постфиксной (обратной польской) нотации.
Выражение содержит целые числа и операторы +, -, *, /.

3. Проверка корректности HTML-документа
Проверьте, правильно ли в HTML-документе расставлены теги.
Например, для <html><body></body></html> ответ должен быть true, а для <html><body></html></body> — false.
Используйте стек для хранения открытых тегов.

4. Реализация двусторонней очереди с использованием двух стеков
Используя только два стека, реализуйте структуру данных двусторонней очереди (deque).
Реализуйте основные операции: добавление и удаление элементов с обоих концов.

5. Сортировка стека
Напишите программу, которая сортирует стек в порядке возрастания (самый большой элемент находится на вершине)
с использованием только дополнительного стека (не используйте другие структуры данных).

6. Железнодорожная перестановка
Поезда прибывают на железнодорожную станцию в неправильном порядке,
и вам необходимо использовать рельсовый путь как стек для перестановки вагонов так,
чтобы они могли уехать в правильном порядке.
Вагоны отмечены числами, и нужно упорядочить их по возрастанию.

7. Распознавание паттернов в скобочных последовательностях
Расширьте задачу о проверке скобочных последовательностей,
добавив возможность распознавать шаблоны в скобочных структурах, например, чтобы программа могла определить,
содержит ли последовательность вложенные однотипные скобки без пересечений, такие как {{}}, [[]], или (()).