
Описание выполнения команды 1 - "AddProjectMenu" в BossMenu:

Класс AddProjectMenu относится к меню босса в интерфейсе управления проектами
и обеспечивает функциональность для добавления нового проекта в систему.

Назначение:
Этот класс предназначен для взаимодействия с пользователем (в данном случае, с боссом)
для сбора информации о новом проекте и его последующего добавления в систему управления проектами.

Основная функциональность:
Информирование пользователя: При активации меню пользователя информируют о критериях
и требованиях к информации о проекте, таких как ограничения на название и описание проекта.

Сбор данных о проекте:
С помощью UserTalkService.getProjectParameters() осуществляется запрос у пользователя названия
и описания нового проекта.

Добавление проекта:
Создается экземпляр ProjectAddService, который использует метод registration(dto)
для попытки добавления проекта в репозиторий с использованием собранных данных.
Экземпляр ProjectAddService принимает в качестве параметра репозиторий проектов,
что позволяет ему взаимодействовать с данными проекта.

Обработка ответа:
В зависимости от результата операции добавления, пользователю выводится сообщение
об успешном добавлении проекта или об ошибке при добавлении.
В случае успеха отображается подтверждение с информацией о проекте,
в случае ошибки - соответствующее сообщение об ошибке.

Пример использования:
- При выборе опции добавления проекта в меню босса вызывается конструктор AddProjectMenu,
  который инициирует процесс сбора информации и ее последующей обработки.
- Это позволяет боссу легко расширять список проектов в системе,
  обеспечивая эффективное управление ресурсами и задачами внутри организации.

  Расширенная Техническая Презентация: Класс AddProjectMenu

  Обзор Класса AddProjectMenu
  Класс AddProjectMenu отвечает за добавление нового проекта в систему управления проектами.
  Он служит входной точкой для процесса сбора информации о проекте от пользователя, его валидации,
  сохранения и обработки возможных ошибок.

  Технические Детали

  UserTalkService.projectInformation():
  Назначение: Показывает пользователю инструкции и требования к данным проекта.
  Входные данные: Отсутствуют.
  Выходные данные: Информационное сообщение в консоль.

  UserTalkService.getProjectParameters():
  Назначение: Запрашивает у пользователя название и описание проекта.
  Входные данные: Ввод пользователя через консоль.
  Выходные данные: Объект ProjectDto с данными, введенными пользователем.

  ProjectAddService.addService():
  Назначение: Обрабатывает добавление проекта, включая его валидацию и сохранение.
  Входные данные: ProjectDto от UserTalkService.
  Выходные данные: ResponseDTO, содержащий статус операции (успех или список ошибок).

  ResponseDTO:
  Назначение: Универсальный ответ сервиса, содержащий код ответа и сообщение (или список ошибок).
  Входные данные: Код ответа (200 для успеха, 400 для ошибки) и данные ответа (сообщение успеха или список ошибок).

  Процесс Добавления Проекта

  1. Информирование пользователя о требованиях к проекту.
  2. Получение от пользователя данных проекта.
  3. Передача данных в сервис добавления проекта.
  4. Валидация данных проекта.
  5. В случае успешной валидации - сохранение проекта в репозитории.
  6. Обработка и вывод результатов операции:
  - Успех: вывод сообщения о успешном добавлении.
  - Ошибка: вывод сообщений об ошибках.

  Валидация и Сохранение

  Валидация: Проверка соответствия названия и описания проекта заданным требованиям (длина строки, формат и т.д.).
  Сохранение: Добавление проекта в хранилище данных через ProjectRepository, если данные прошли валидацию.

  Обработка Ошибок

  При обнаружении ошибок валидации пользователю выводятся соответствующие сообщения.
  Система поддерживает расширяемость обработки ошибок благодаря использованию ResponseDTO.

  Тестирование
  Компонентный подход и разделение ответственности между классами
  облегчают процесс модульного тестирования каждого этапа добавления проекта.

  Заключение
  Класс AddProjectMenu является ключевой частью системы управления проектами,
  обеспечивая интерактивный и надежный процесс добавления новых проектов.
  Строгая типизация и четкая структура кода способствуют легкости поддержки и развития проекта.